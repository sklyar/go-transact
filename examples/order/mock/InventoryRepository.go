// Code generated by mockery v2.26.1. DO NOT EDIT.

package mock

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// InventoryRepository is an autogenerated mock type for the InventoryRepository type
type InventoryRepository struct {
	mock.Mock
}

// DecrementProductQuantity provides a mock function with given fields: ctx, productID
func (_m *InventoryRepository) DecrementProductQuantity(ctx context.Context, productID int) error {
	ret := _m.Called(ctx, productID)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int) error); ok {
		r0 = rf(ctx, productID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetProductQuantity provides a mock function with given fields: ctx, productID
func (_m *InventoryRepository) GetProductQuantity(ctx context.Context, productID int) (int, error) {
	ret := _m.Called(ctx, productID)

	var r0 int
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, int) (int, error)); ok {
		return rf(ctx, productID)
	}
	if rf, ok := ret.Get(0).(func(context.Context, int) int); ok {
		r0 = rf(ctx, productID)
	} else {
		r0 = ret.Get(0).(int)
	}

	if rf, ok := ret.Get(1).(func(context.Context, int) error); ok {
		r1 = rf(ctx, productID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewInventoryRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewInventoryRepository creates a new instance of InventoryRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewInventoryRepository(t mockConstructorTestingTNewInventoryRepository) *InventoryRepository {
	mock := &InventoryRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
